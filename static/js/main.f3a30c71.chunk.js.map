{"version":3,"sources":["firebase.js","Components/SignIn.jsx","Components/SignUp.jsx","Components/PasswordReset.jsx","providers/UserProvider.jsx","Components/Home/Info.jsx","Components/Home/Contacto.jsx","Components/Home/Help.jsx","Components/Home/User.jsx","Components/ProfilePage.jsx","Components/Application.jsx","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","firestore","provider","GoogleAuthProvider","generateUserDocument","user","additionalData","a","async","userRef","doc","uid","get","exists","email","displayName","photoURL","set","console","error","getUserDocument","userDocument","data","SignIn","useState","setEmail","password","setPassword","setError","onChangeHandler","event","currentTarget","name","value","className","type","placeholder","onChange","href","onClick","preventDefault","log","signInWithEmailAndPassword","catch","window","location","replace","signInWithEmailAndPasswordHandler","to","signInWithPopup","SignUp","setDisplayName","htmlFor","id","createUserWithEmailAndPassword","createUserWithEmailAndPasswordHandler","class","PasswordReset","emailHasBeenSent","setEmailHasBeenSent","action","sendPasswordResetEmail","then","setTimeout","sendResetEmail","UserContext","createContext","UserProvider","state","componentDidMount","onAuthStateChanged","userAuth","setState","setUserContext","usertmp","this","Provider","props","children","Component","Info","Fragment","Contacto","Help","User","ProfilePage","useContext","signOut","exact","path","style","background","backgroundSize","height","width","Application","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f3a30c71.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD-AMOyztQOEQIFm5ItKttsJGCSRt0G-aI\",\n  authDomain: \"logindps-ba29e.firebaseapp.com\",\n  databaseURL: \"https://logindps-ba29e.firebaseio.com\",\n  projectId: \"logindps-ba29e\",\n  storageBucket: \"logindps-ba29e.appspot.com\",\n  messagingSenderId: \"308519979064\",\n  appId: \"1:308519979064:web:9d4f667dbfa20103ea7ecd\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n// Representa el proveedor de autenticación de inicio de sesión de Google.\n// Utilice esta clase para obtener\nconst provider = new firebase.auth.GoogleAuthProvider();\n\n//Para acceder con una ventana emergente, llama a signInWithPopup\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(provider);\n};\n\nexport const generateUserDocument = async (user, additionalData) => {\n  if (!user) return;\n  //En algunos casos, puede ser útil crear una referencia de documento con un ID \n  //generado automáticamente y, luego, usar la referencia más adelante. \n  //Para este caso práctico, puedes llamar a doc():\n  const userRef = firestore.doc(`users/${user.uid}`);\n\n  // Para obetner el registro creado\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const { email, displayName, photoURL } = user;\n    try {\n      // Para crear o reemplazar un solo documento, usa el método set()\n      await userRef.set({\n        displayName,\n        email,\n        photoURL,\n        ...additionalData\n      });\n    } catch (error) {\n      console.error(\"Error crear el usuario\", error);\n    }\n  }\n  return getUserDocument(user.uid);\n};\n\n// getUserDocument , consulta un registro por medio del id\nconst getUserDocument = async uid => {\n  if (!uid) return null;\n  try {\n    const userDocument = await firestore.doc(`users/${uid}`).get();\n    return {\n      uid,\n      ...userDocument.data()\n    };\n  } catch (error) {\n    console.error(\"Error extraer usuario\", error);\n  }\n};\n","import React, { useState } from \"react\";\nimport { Link } from \"@reach/router\";\nimport { signInWithGoogle } from \"../firebase\";\nimport { auth } from \"../firebase\";\n\nconst SignIn = () => {\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n\n\n  const signInWithEmailAndPasswordHandler = (event) => {\n\n    event.preventDefault(); //DOM -> POST , GET -> PHP , JAVA , ASP , ETC\n   \n    console.log(\" SignIn - signInWithEmailAndPasswordHandler \");\n    const user= auth.signInWithEmailAndPassword(email, password).catch(error => {\n        setError(\"Error, por favor revisar credenciales -> \" + error);\n        console.error(\"Error signing in with password and email \", error);\n      });\n      console.log(\" SignIn - signInWithEmailAndPassword \");  \n      console.log(\" const user :  \" + user);  \n      window.location.replace(\"https://rolando988.github.io/crud/\");    \n  };\n\n  const onChangeHandler = (event) => {\n    const { name, value } = event.currentTarget;\n\n    if (name === 'userEmail') {\n      setEmail(value);\n    }\n    else if (name === 'userPassword') {\n      setPassword(value);\n    }\n  };\n\n\n  return (\n    <div className=\"\">\n      <nav className=\"navbar navbar-inverse\">\n        <ul className=\"nav navbar-nav\">\n        </ul>\n      </nav>\n      <div className=\"mt-8\">\n        <div className=\"border border-blue-400 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\">\n          <form>\n            {error !== null && (\n              <div className=\"py-4 bg-red-600 w-full text-white text-center mb-3\">\n                {error}\n              </div>\n            )}\n            <div className=\"form-group\">\n              <label>Correo Electronico</label>\n              <input type=\"email\" className=\"form-control\"\n                name=\"userEmail\"\n                placeholder=\"Ingresar email\"\n                onChange={(event) => onChangeHandler(event)} />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Contraseña</label>\n              <input type=\"password\" className=\"form-control\"\n                name=\"userPassword\"\n                placeholder=\"Ingresar password\"\n                onChange={(event) => onChangeHandler(event)} />\n            </div>\n\n            <a href=\"https://www.youtube.com/\"><button type=\"submit\" className=\"btn btn-primary btn-block\"\n              onClick={(event) => { signInWithEmailAndPasswordHandler(event) }}\n            ><i className=\"fa fa-lock\"></i>  Ingresar</button>\n            </a>\n            <p className=\"text-center my-3\">\n              {\" \"}\n              <Link to=\"\" className=\"text-blue-500 hover:text-blue-600\">\n                No tiene cuenta ?\n          </Link>{\" \"}\n              <br />{\" \"}\n              <Link to=\"passwordReset\" className=\"text-blue-500 hover:text-blue-600\">\n                Olvido la contraseña ?\n          </Link>\n            </p>\n          </form>\n          <button className=\"btn btn-info btn-block\"\n            onClick={() => { signInWithGoogle(); }}\n          ><i className=\"fa fa-google\"></i>  Ingresar con Google\n          </button>   \n        </div>   \n      </div>\n    </div>\n\n  );\n};\n\nexport default SignIn;\n","import React, { useState } from \"react\";\nimport { Link } from \"@reach/router\";\nimport { auth, generateUserDocument } from \"../firebase\";\n\nconst SignUp = () => {\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [displayName, setDisplayName] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  const createUserWithEmailAndPasswordHandler = async (event) => {\n\n    event.preventDefault(); // POST , GET , PHP, JAVA , ASP, ETC\n\n    setError(\"\");\n    try {\n      const { user } = await auth.createUserWithEmailAndPassword(email, password);\n      generateUserDocument(user, { displayName });\n    }\n    catch (error) {\n      setError('Error , Por favor intentar de nuevo : ' + error);\n    }\n    setEmail(\"\");\n    setPassword(\"\");\n    setDisplayName(\"\");\n  };\n\n  const onChangeHandler = event => {\n    const { name, value } = event.currentTarget;\n    if (name === \"userEmail\") {\n      setEmail(value);\n    } else if (name === \"userPassword\") {\n      setPassword(value);\n    } else if (name === \"displayName\") {\n      setDisplayName(value);\n    }\n  };\n\n  return (\n    <div className=\"\">\n      <nav className=\"navbar navbar-inverse\">\n        <ul className=\"nav navbar-nav\">\n        </ul>\n      </nav>\n      <div className=\"mt-8\">\n        <h1 className=\"text-3xl mb-2 text-center font-bold\">Crear Cuenta</h1>\n        <div className=\"border border-blue-400 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\">\n          {error !== null && (\n            <div className=\"py-4 bg-red-600 w-full text-white text-center mb-3\">\n              {error}\n            </div>\n          )}\n          <form className=\"\">\n            \n            <label htmlFor=\"displayName\" className=\"block\">\n              Nombre:\n          </label>\n          <div className=\"form-group\">            \n              <input type=\"text\" className=\"form-control\"\n                name=\"displayName\"\n                placeholder=\"Ingresar Nombre\"\n                onChange={(event) => onChangeHandler(event)} />\n            </div>         \n\n            <label htmlFor=\"userEmail\" className=\"block\">\n              Correo:\n          </label>\n          <div className=\"form-group\">            \n              <input type=\"email\" className=\"form-control\"\n                name=\"userEmail\"\n                id=\"userEmail\"\n                value={email}\n                placeholder=\"Ingresar Correo\"\n                onChange={(event) => onChangeHandler(event)} />\n            </div>      \n\n            <label htmlFor=\"userPassword\" className=\"block\">\n              Contraseña :\n          </label>\n          <div className=\"form-group\">            \n              <input type=\"password\" className=\"form-control\"\n                name=\"userPassword\"\n                id=\"userEmail\"\n                value={password}\n                placeholder=\"Ingresar Contraseña\"\n                onChange={(event) => onChangeHandler(event)} />\n            </div>  \n                       \n            <button className=\"bg-green-400 hover:bg-green-500 w-full py-2 text-white\" \n              onClick={event => {\n                createUserWithEmailAndPasswordHandler(event);\n              }}\n            ><i class=\"fa fa-save\"></i>  Guardar\n          </button>\n          </form>\n          <p className=\"text-center my-3\">\n            {\" \"}\n            <Link to=\"/\" className=\"text-blue-500 hover:text-blue-600\">\n              Regresar Login\n          </Link>{\" \"}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import React, { useState } from \"react\";\nimport { auth } from \"../firebase\";\nimport { Link } from \"@reach/router\";\n\nconst PasswordReset = () => {\n  const [email, setEmail] = useState(\"\");\n  const [emailHasBeenSent, setEmailHasBeenSent] = useState(false);\n  const [error, setError] = useState(null);\n\n  const onChangeHandler = event => {\n    const { name, value } = event.currentTarget;\n\n    if (name === \"userEmail\") {\n      setEmail(value);\n    }\n  };\n\n  const sendResetEmail = event => {\n    event.preventDefault();\n    auth\n      .sendPasswordResetEmail(email)\n      .then(() => {\n        setEmailHasBeenSent(true);\n        setTimeout(() => { setEmailHasBeenSent(false) }, 3000);\n      })\n      .catch(() => {\n        setError(\"Error resetting password\");\n      });\n  };\n  return (\n    <div>\n      <nav class=\"navbar navbar-inverse\">\n        <ul class=\"nav navbar-nav\">\n        </ul>\n      </nav>\n      <div className=\"mt-8\">\n        <h1 className=\"text-xl text-center font-bold mb-3\">\n          Cambiar contraseña\n      </h1>\n        <div className=\"border border-blue-300 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\">\n          <form action=\"\">\n            {emailHasBeenSent && (\n              <div className=\"py-3 bg-green-400 w-full text-white text-center mb-3\">\n                Por favor revisar su correo electronico\n              </div>\n            )}\n            {error !== null && (\n              <div className=\"py-3 bg-red-600 w-full text-white text-center mb-3\">\n                {error}\n              </div>\n            )}\n            <label htmlFor=\"userEmail\" className=\"w-full block\">\n              Correo:\n          </label>\n            <div className=\"form-group\">\n              <input type=\"email\" className=\"form-control\"\n                name=\"userEmail\"\n                id=\"userEmail\"\n                value={email}\n                placeholder=\"Ingresar Correo\"\n                onChange={(event) => onChangeHandler(event)} />\n            </div>\n            <button\n              className=\"w-full bg-blue-400 text-white py-3\"\n              onClick={event => {\n                sendResetEmail(event);\n              }}\n            ><i class=\"fa fa-save\"></i> Guardar\n          </button>\n          </form>\n\n          <Link\n            to=\"/\"\n            className=\"my-2 text-blue-700 hover:text-blue-800 text-center block\"\n          >\n            &larr; Regresar\n        </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PasswordReset;\n","import React, { Component, createContext } from \"react\";\nimport { auth, generateUserDocument } from \"../firebase\";\n\n// Context se usa principalmente cuando algunos datos tienen que ser accesibles\n// por muchos componentes en diferentes niveles de anidamiento. \n// Aplícalo con moderación porque hace que la reutilización de \n// componentes sea más difícil.\n\n\n// Context nos permite pasar un valor a lo profundo del árbol de componentes\n// sin pasarlo explícitamente a través de cada componente.\n// Crear un Context para el user actual (con \"null\" como valor predeterminado).\nexport const UserContext = createContext({ user: null });\n\nclass UserProvider extends Component {\n\n  state = {user: null};\n\n  /* \n  Esto activaba al triggered  cuando los usuarios iniciaban sesión, \n  cerraban sesión o cuando el token de identificación del usuario \n  cambiaba en situaciones como la caducidad del token o el cambio de \n  contraseña. el triggered solo se activa al iniciar o cerrar sesión.\n  */\n  componentDidMount = async () => {\n    console.log(\" UserProvider componentDidMount : \");\n    auth.onAuthStateChanged(async userAuth => {\n      const user = await generateUserDocument(userAuth);\n      console.log(\" Usuario triggered componentDidMount : \" + user);   \n      this.setState({ user });      \n      console.log(\"++++++++++++++++++++++++++++++++++\");    \n    });\n  };\n\n  setUserContext = (usertmp) => {  \n    this.setState({ usertmp });    \n  };\n\n  render() {\n    const { user } = this.state;\n    console.log(\" render -> Usuario UserProvider : \" + user);\n    return (\n      // Usa un Provider para pasar el user actual al árbol de abajo.\n      // Cualquier componente puede leerlo, sin importar qué tan profundo se encuentre.\n      // En este ejemplo, estamos pasando \"user\" como valor actual.\n      <UserContext.Provider value={user}>\n        {this.props.children}\n      </UserContext.Provider>\n    );\n  }\n}\nexport default UserProvider;\n","import React from \"react\";\n\nconst Info = () => (\n  <React.Fragment>\n    <p>Esta compañia se fundó en el 2020, Mas que una compañia, somos una solucion</p>\n  </React.Fragment>\n)\nexport default Info","import React from \"react\"\n\nconst Contacto = () => (\n    <React.Fragment> \n        <p>Estas en la pagina de contacto. Aqui encontraras información para contactar a la compañia</p>\n        <p>Telefono: 789-456-123</p>\n    </React.Fragment>\n)\nexport default Contacto","import React from \"react\"\n\nconst Help = () => (\n  <React.Fragment>\n    <p><h1>Pagina de ayuda</h1></p>\n  </React.Fragment>\n)\n\nexport default Help","import React from \"react\"\n\nconst User = () => (\n  <React.Fragment>\n    <p><h1>Pagina de Usario</h1></p>\n  </React.Fragment>\n)\n\nexport default User","import React, { useContext } from \"react\";\nimport { UserContext } from \"../providers/UserProvider\";\nimport { auth } from \"../firebase\";\nimport { Router, Link } from \"@reach/router\";\n\nimport Info from \"./Home/Info\"\nimport Contacto from \"./Home/Contacto\"\nimport Help from \"./Home/Help\"\nimport User from \"./Home/User\"\n\nconst ProfilePage = () => {\n\n  // Asigna un user para leer el contexto del tema actual.\n  // React encontrará el Provider superior más cercano y usará su valor.\n  const user = useContext(UserContext);\n\n  const { photoURL, displayName, email } = user;\n  console.log(\" Usuario ProfilePage : \" + displayName + \" - \" + email);\n\n  const signOut = () => {\n    auth.signOut();  \n  };\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-inverse\">\n        <div className=\"container-fluid\">\n          <div className=\"navbar-header\">\n            <a className=\"navbar-brand\" href=\"/\">WebSiteName</a>\n          </div>\n          <ul className=\"nav navbar-nav\">\n            <li className=\"active\"><Link to=\"/\">Inicio</Link></li>\n            <li><Link to=\"info\">Info</Link></li>\n            <li><Link to=\"contacto\">Contactanos</Link></li>\n            <li><Link to=\"user\">User</Link></li>\n            <li><Link to=\"help\">Help</Link></li>\n            <button className=\"btn btn-danger\" onClick={() => { signOut() }}>\n              Sign out</button>\n          </ul>\n        </div>\n      </nav>\n      <Router>\n        <Info exact path=\"info\" />\n        <Contacto exact path=\"contacto\" />\n        <Help exact path=\"help\" />\n        <User exact path=\"user\" />\n      </Router>\n\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <span className=\"float-right\">\n              <div\n                style={{\n                  background: `url(${photoURL || 'https://res.cloudinary.com/dqcsk8rsc/image/upload/v1577268053/avatar-1-bitmoji_upgwhc.png'})  no-repeat center center`,\n                  backgroundSize: \"cover\",\n                  height: \"100px\",\n                  width: \"100px\"\n                }}\n                className=\"border border-blue-300\"\n              ></div>\n              <br></br>\n             Nombre : <h2 className=\"text-2xl font-semibold\">{displayName}</h2>\n              <br></br>\n             Correo: <h3 className=\"italic\">{email}</h3>\n            </span>\n          </div>\n        </div>\n      </div>\n          </div>\n  )\n};\n\nexport default ProfilePage;\n\n","import React, { useContext } from \"react\";\nimport { Router } from \"@reach/router\";\n\nimport SignIn from \"./SignIn\";\nimport SignUp from \"./SignUp\";\nimport PasswordReset from \"./PasswordReset\";\n\nimport ProfilePage from \"./ProfilePage\";\nimport { UserContext } from \"../providers/UserProvider\";\n\n\nfunction Application() {\n  // Asigna un user para leer el contexto actual.\n  // React encontrará el Provider superior más cercano \n  // y usará su valor.\n  const user = useContext(UserContext);\n  console.log(\" Usuario Application : \" + user);\n\n  return (\n    user ? <ProfilePage />  // true\n      : // false\n      <Router> \n          <SignIn path=\"/\" />\n          <SignUp path=\"signUp\" />\n          <PasswordReset path=\"passwordReset\" />      \n      </Router>\n  );\n}\n\nexport default Application;\n","import React from \"react\";\n\nimport Application from \"./Components/Application\";\nimport UserProvider from \"./providers/UserProvider\";\n\nfunction App() {\n  return (\n    <UserProvider>\n      <Application />\n      <div className=\"footer\">\n        <p>PRUEBAS LOGIN</p>\n      </div>\n    </UserProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"./styles.css\";\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}